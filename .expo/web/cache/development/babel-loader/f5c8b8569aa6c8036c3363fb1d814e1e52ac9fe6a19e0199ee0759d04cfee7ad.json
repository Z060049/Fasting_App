{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebShape = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _prepare = require(\"./utils/prepare\");\nvar _convertInt32Color = require(\"./utils/convertInt32Color\");\nvar _utils = require(\"./utils\");\nvar _hasProperty = require(\"./utils/hasProperty\");\nvar _SvgTouchableMixin = _interopRequireDefault(require(\"../lib/SvgTouchableMixin\"));\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nvar WebShape = exports.WebShape = function (_React$Component) {\n  function WebShape(props) {\n    var _this;\n    (0, _classCallCheck2.default)(this, WebShape);\n    _this = _callSuper(this, WebShape, [props]);\n    _this.elementRef = _react.default.createRef();\n    _this.lastMergedProps = {};\n    if ((0, _hasProperty.hasTouchableProperty)(props)) {\n      (0, _SvgTouchableMixin.default)(_this);\n    }\n    _this._remeasureMetricsOnActivation = _utils.remeasure.bind(_this);\n    return _this;\n  }\n  (0, _inherits2.default)(WebShape, _React$Component);\n  return (0, _createClass2.default)(WebShape, [{\n    key: \"prepareProps\",\n    value: function prepareProps(props) {\n      return props;\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      var merged = Object.assign({}, this.props, this.lastMergedProps, props.style);\n      this.lastMergedProps = merged;\n      var clean = (0, _prepare.prepare)(this, this.prepareProps(merged));\n      var current = this.elementRef.current;\n      if (current) {\n        for (var cleanAttribute of Object.keys(clean)) {\n          var cleanValue = clean[cleanAttribute];\n          switch (cleanAttribute) {\n            case 'ref':\n            case 'children':\n              break;\n            case 'style':\n              for (var partialStyle of [].concat((_clean$style = clean.style) != null ? _clean$style : [])) {\n                var _clean$style;\n                Object.assign(current.style, partialStyle);\n              }\n              break;\n            case 'fill':\n              if (cleanValue && typeof cleanValue === 'object') {\n                var value = cleanValue;\n                current.setAttribute('fill', (0, _convertInt32Color.convertInt32ColorToRGBA)(value.payload));\n              }\n              break;\n            case 'stroke':\n              if (cleanValue && typeof cleanValue === 'object') {\n                var _value = cleanValue;\n                current.setAttribute('stroke', (0, _convertInt32Color.convertInt32ColorToRGBA)(_value.payload));\n              }\n              break;\n            default:\n              current.setAttribute((0, _utils.camelCaseToDashed)(cleanAttribute), cleanValue);\n              break;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.tag) {\n        throw new Error('When extending `WebShape` you need to overwrite either `tag` or `render`!');\n      }\n      this.lastMergedProps = {};\n      return (0, _reactNative.unstable_createElement)(this.tag, (0, _prepare.prepare)(this, this.prepareProps(this.props)));\n    }\n  }]);\n}(_react.default.Component);","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_prepare","_convertInt32Color","_utils","_hasProperty","_SvgTouchableMixin","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","WebShape","exports","_React$Component","props","_this","_classCallCheck2","elementRef","React","createRef","lastMergedProps","hasTouchableProperty","SvgTouchableMixin","_remeasureMetricsOnActivation","remeasure","bind","_inherits2","_createClass2","key","value","prepareProps","setNativeProps","merged","Object","assign","style","clean","prepare","current","cleanAttribute","keys","cleanValue","partialStyle","concat","_clean$style","setAttribute","convertInt32ColorToRGBA","payload","camelCaseToDashed","render","tag","Error","createElement","Component"],"sources":["/Users/joeli/Desktop/Files/github/FastingApp/node_modules/react-native-svg/src/web/WebShape.ts"],"sourcesContent":["import React, { type JSX } from 'react';\nimport {\n  GestureResponderEvent,\n  // @ts-ignore it is not seen in exports\n  unstable_createElement as createElement,\n} from 'react-native';\n\nimport { BaseProps } from './types';\nimport { prepare } from './utils/prepare';\nimport { convertInt32ColorToRGBA } from './utils/convertInt32Color';\nimport { camelCaseToDashed, remeasure } from './utils';\nimport { hasTouchableProperty } from './utils/hasProperty';\nimport SvgTouchableMixin from '../lib/SvgTouchableMixin';\n\nexport class WebShape<\n  P extends BaseProps = BaseProps,\n> extends React.Component<P> {\n  [x: string]: unknown;\n  protected tag?: React.ElementType;\n  protected prepareProps(props: P) {\n    return props;\n  }\n\n  elementRef =\n    React.createRef<SVGElement>() as React.MutableRefObject<SVGElement | null>;\n\n  lastMergedProps: Partial<P> = {};\n\n  /**\n   * disclaimer: I am not sure why the props are wrapped in a `style` attribute here, but that's how reanimated calls it\n   */\n  setNativeProps(props: { style: P }) {\n    const merged = Object.assign(\n      {},\n      this.props,\n      this.lastMergedProps,\n      props.style\n    );\n    this.lastMergedProps = merged;\n    const clean = prepare(this, this.prepareProps(merged));\n    const current = this.elementRef.current;\n    if (current) {\n      for (const cleanAttribute of Object.keys(clean)) {\n        const cleanValue = clean[cleanAttribute as keyof typeof clean];\n        switch (cleanAttribute) {\n          case 'ref':\n          case 'children':\n            break;\n          case 'style':\n            // style can be an object here or an array, so we convert it to an array and assign each element\n            for (const partialStyle of ([] as unknown[]).concat(\n              clean.style ?? []\n            )) {\n              Object.assign(current.style, partialStyle);\n            }\n            break;\n          case 'fill':\n            if (cleanValue && typeof cleanValue === 'object') {\n              const value = cleanValue as { payload: number };\n              current.setAttribute(\n                'fill',\n                convertInt32ColorToRGBA(value.payload)\n              );\n            }\n            break;\n          case 'stroke':\n            if (cleanValue && typeof cleanValue === 'object') {\n              const value = cleanValue as { payload: number };\n              current.setAttribute(\n                'stroke',\n                convertInt32ColorToRGBA(value.payload)\n              );\n            }\n            break;\n          default:\n            // apply all other incoming prop updates as attributes on the node\n            // same logic as in https://github.com/software-mansion/react-native-reanimated/blob/d04720c82f5941532991b235787285d36d717247/src/reanimated2/js-reanimated/index.ts#L38-L39\n            // @ts-expect-error TODO: fix this\n            current.setAttribute(camelCaseToDashed(cleanAttribute), cleanValue);\n            break;\n        }\n      }\n    }\n  }\n\n  _remeasureMetricsOnActivation: () => void;\n  touchableHandleStartShouldSetResponder?: (\n    e: GestureResponderEvent\n  ) => boolean;\n\n  touchableHandleResponderMove?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderGrant?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderRelease?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderTerminate?: (e: GestureResponderEvent) => void;\n  touchableHandleResponderTerminationRequest?: (\n    e: GestureResponderEvent\n  ) => boolean;\n\n  constructor(props: P) {\n    super(props);\n\n    // Do not attach touchable mixin handlers if SVG element doesn't have a touchable prop\n    if (hasTouchableProperty(props)) {\n      SvgTouchableMixin(this);\n    }\n\n    this._remeasureMetricsOnActivation = remeasure.bind(this);\n  }\n\n  render(): JSX.Element {\n    if (!this.tag) {\n      throw new Error(\n        'When extending `WebShape` you need to overwrite either `tag` or `render`!'\n      );\n    }\n    this.lastMergedProps = {};\n    return createElement(\n      this.tag,\n      prepare(this, this.prepareProps(this.props))\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}